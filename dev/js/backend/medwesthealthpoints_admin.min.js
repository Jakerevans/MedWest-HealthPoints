/**
 * JavaScript Admin Functions - medwesthealthpoints-admin.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  6.0.0
 */

console.log( 'This is the JavaScript Object that holds all PHP Variables for use in the medwesthealthpoints Admin JavaScript file:' );
console.log( medwestHealthpointsPhpVariables );


// All functions wrapped in jQuery( document ).ready()...
jQuery( document ).ready( function( $ ) {
	'use strict';

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	medwestHealthpointsAdminPointersJavascript();

	// Function that will handle the saving of the user's License Key.
	medwestHealthpointsPluginPageDashboardSaveKey();

	// Function for approving an activity from the Admin menu.
	medwestHealthpointsApproveActivity();

	// Function to deny pending Activities.
	medwestHealthpointsDenyActivity();

	// Function for enabling the 'Upload Files' buttons.
	medWestWordPressFileUpload();

	// This is a function to let the admin create a new reward.
	medWestCreateNewReward();

	// This is a function to edit rewards.
	medWestEditReward();

	// This is a function to delete rewards.
	medWestDeleteReward();

	//masking();

	function masking(){
		var phoneMask = IMask(
			document.getElementById('medwesthpplugin-form-contactphone'), {
		    mask: '(000) 000-0000'
		});
	}



	// Function that will handle the saving of the user's License Key.
	function medwestHealthpointsPluginPageDashboardSaveKey() {

		// When the 'Save' button is clicked at the top of the dashboard...
		$( '#medwesthpplugin-extension-genreric-key-dashboard-form-toplevel' ).on( 'submit', function() {

			var license = $( '#medwesthpplugin-extension-genreric-key-dashboard-input-toplevel' ).val();

			// Make Ajax call to get display options.
			var data = {
				'action': 'medwesthealthpoints_save_license_key_action',
				'security': medwestHealthpointsPhpVariables.adminnonce1,
				'license': license
			};

			console.log(data);

			$.post( ajaxurl, data, function( response ) {

				document.location.reload( true );

			});


			event.preventDefault ? event.preventDefault() : event.returnValue = false;

		});

		// When the 'Save' button is clicked from the plugin's entry...
		$( '#medwesthpplugin-extension-genreric-key-plugins-page-button-toplevel' ).on( 'click', function() {

			var license = $( this ).prev().val();

			// Make Ajax call to get display options.
			var data = {
				'action': 'medwesthealthpoints_save_license_key_action',
				'security': medwestHealthpointsPhpVariables.adminnonce1,
				'license': license
			};

			console.log(data);

			$.post( ajaxurl, data, function( response ) {

				document.location.reload( true );

			});
			event.preventDefault ? event.preventDefault() : event.returnValue = false;
		});
	}


	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	function medwestHealthpointsAdminPointersJavascript() {

		$( 'body' ).on( 'mouseenter', '.medwesthpplugin-icon-image-question', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display.
			switch ( label ) {
			case 'book-form-isbn10':
				pointer = $( this ).pointer({
					content: '<h3>' + medwesthppluginPhpVariables.trans135 + '</h3><p class="medwesthpplugin-admin-pointer">' + medwesthppluginPhpVariables.trans173 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter.
			pointer.pointer( 'open' );

			// Close the pointer on mouseleave.
			$( 'body' ).on( 'mouseleave', '.medwesthpplugin-icon-image-question', function() {
				pointer.pointer( 'close' );
			});

		});

		$( 'body' ).on( 'mouseenter', '.medwesthpplugin-icon-image-question-with-link', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-libraries':
				pointer = $( this ).pointer({
					content: '<h3>' + medwesthppluginPhpVariables.trans203 + '</h3><p class="medwesthpplugin-admin-pointer">' + medwesthppluginPhpVariables.trans204 + medwesthppluginPhpVariables.SETTINGS_PAGE_URL + medwesthppluginPhpVariables.trans205 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter
			pointer.pointer( 'open' );

		});
	}

	// Function to approve pending Activities.
	function medwestHealthpointsApproveActivity(){

		$( document ).on( 'click', '.medwest-activity-approve-button', function( event ) {
			var useridnumber = $( this ).attr( 'data-useremployeeid' );
			var activityid = $( this ).attr( 'data-activityid' );
			var userhealthpoints = $( this ).attr( 'data-userhealthpoints' );


			var data = {
	          'action': 'medwesthealthpoints_approve_activities_user_action',
	          'security': medwestHealthpointsPhpVariables.adminnonce4,
	          'useridnumber':useridnumber,
	          'activityid':activityid,
	          'userhealthpoints':userhealthpoints,
	        };

        	console.log('This is the data being sent to the server to create a new user');
        	console.log(data);


			var request = $.ajax({
				url: ajaxurl,
				type: "POST",
				data:data,
				timeout: 0,
				success: function(response) {
					console.log(response);
					
				},
				error: function(jqXHR, textStatus, errorThrown) {
					console.log(errorThrown);
					console.log(textStatus);
					console.log(jqXHR);
				}
			});

		});
	}

	// Function to deny pending Activities.
	function medwestHealthpointsDenyActivity(){

		$( document ).on( 'click', '.medwest-activity-deny-button', function( event ) {
			var useridnumber = $( this ).attr( 'data-useremployeeid' );
			var activityid = $( this ).attr( 'data-activityid' );
			var userhealthpoints = $( this ).attr( 'data-userhealthpoints' );


			var data = {
	          'action': 'medwesthealthpoints_deny_activities_user_action',
	          'security': medwestHealthpointsPhpVariables.adminnonce5,
	          'useridnumber':useridnumber,
	          'activityid':activityid,
	          'userhealthpoints':userhealthpoints,
	        };

        	console.log('This is the data being sent to the server to create a new user');
        	console.log(data);


			var request = $.ajax({
				url: ajaxurl,
				type: "POST",
				data:data,
				timeout: 0,
				success: function(response) {
					console.log(response);
					
				},
				error: function(jqXHR, textStatus, errorThrown) {
					console.log(errorThrown);
					console.log(textStatus);
					console.log(jqXHR);
				}
			});

		});
	}

	// Function for enabling the 'Upload Files' buttons.
	function medWestWordPressFileUpload() {

		// For the book cover image upload.
		var fileFrame;
		var wpMediaPostId = 0;
		var setToPostId = 0;

		// Must be parsed to an int! All the medwestPhpVariables are strings initially.
		setToPostId = 0;

		$( document ).on( 'click', '.medwest-form-section-fields-input-file-upload-button', function( event ) {

			var thisbutton = $( this );
			event.preventDefault();

			// Create the media frame.
			fileFrame = wp.media.frames.fileFrame = wp.media({
				title: 'Upload Supporting Documentation For Your Activity',
				button: {
					text: 'Select This File',
				},
				multiple: false
			});

			// When an image is selected, run a callback.
			fileFrame.on( 'select', function() {

				// We set multiple to false so only get one image from the uploader
				var attachment = fileFrame.state().get( 'selection' ).first().toJSON();

				// Do something with attachment.id and/or attachment.url here
				thisbutton.prev().val( attachment.url );
				thisbutton.prev().prev().attr( 'src', attachment.url );
			});

			// Finally, open the modal
			fileFrame.open();
		});
	}

	// This is a function to let the admin create a new reward.
	function medWestCreateNewReward(){

		$( document ).on( 'click', '#medwest-create-reward-backend-button', function( event ) {

			var rewardname = $( '#medwest-input-rewardname' ).val();
			var rewardpointvalue = $( '#medwest-input-rewardpointvalue' ).val();
			var rewardimage = $( '#medwest-input-rewardimage' ).val();
			var rewardurl = $( '#medwest-input-rewardurl' ).val();
			var rewarddescription = $( '#medwest-input-rewarddescription' ).val();
			var proceed = true;
			if ( '' === rewardname ) {
				alert( 'Whoops! Looks like you forgot to name the reward!' );
				proceed = false;
				return false;
			}

			if ( '' === rewardpointvalue ) {
				alert( 'Whoops! Looks like you forgot provide the number of points this Reward is worth!' );
				proceed = false;
				return false;
			}

			if ( '' === rewarddescription ) {
				alert( 'Whoops! Looks like you forgot to provide a Reward Description!' );
				proceed = false;
				return false;
			}

			if ( proceed ) {
				var data = {
		          'action': 'medwesthealthpoints_create_new_reward_action',
		          'security': medwestHealthpointsPhpVariables.adminnonce6,
		          'rewardname':rewardname,
		          'rewardpointvalue':rewardpointvalue,
		          'rewardimage':rewardimage,
		          'rewardurl':rewardurl,
		          'rewarddescription':rewarddescription,
		        };

	        	console.log('This is the data being sent to the server to create a new user');
	        	console.log(data);


				var request = $.ajax({
					url: ajaxurl,
					type: "POST",
					data:data,
					timeout: 0,
					success: function(response) {
						console.log(response);
						
					},
					error: function(jqXHR, textStatus, errorThrown) {
						console.log(errorThrown);
						console.log(textStatus);
						console.log(jqXHR);
					}
				});
			}
		});
	}



	// This is a function to let the admin edit a reward.
	function medWestEditReward(){

		$( document ).on( 'click', '.medwest-edit-reward-backend-button', function( event ) {

			var id = $( this ).attr( 'data-rewardid' );
			var rewardname = $( this).parent().parent().find( '#medwest-input-rewardname' ).val();
			var rewardpointvalue = $( this).parent().parent().find( '#medwest-input-rewardpointvalue' ).val();
			var rewardimage = $( this).parent().parent().find( '#medwest-input-rewardimage' ).val();
			var rewardurl = $( this).parent().parent().find( '#medwest-input-rewardurl' ).val();
			var rewarddescription = $( this).parent().parent().find( '#medwest-input-rewarddescription' ).val();

			var data = {
	          'action': 'medwesthealthpoints_edit_reward_action',
	          'security': medwestHealthpointsPhpVariables.adminnonce7,
	          'rewardname':rewardname,
	          'rewardpointvalue':rewardpointvalue,
	          'rewardimage':rewardimage,
	          'rewardurl':rewardurl,
	          'rewarddescription':rewarddescription,
	          'id':id,
	        };

	        console.log(data)

			var request = $.ajax({
				url: ajaxurl,
				type: "POST",
				data:data,
				timeout: 0,
				success: function(response) {
					console.log(response);
					
				},
				error: function(jqXHR, textStatus, errorThrown) {
					console.log(errorThrown);
					console.log(textStatus);
					console.log(jqXHR);
				}
			});
		});
	}

	// This is a function to let the admin delete a reward.
	function medWestDeleteReward(){

		$( document ).on( 'click', '.medwest-delete-reward-backend-button', function( event ) {

			var id = $( this ).attr( 'data-rewardid' );

			var data = {
	          'action': 'medwesthealthpoints_delete_reward_action',
	          'security': medwestHealthpointsPhpVariables.adminnonce8,
	          'id':id,
	        };

	        console.log(data)

			var request = $.ajax({
				url: ajaxurl,
				type: "POST",
				data:data,
				timeout: 0,
				success: function(response) {
					console.log(response);
					
				},
				error: function(jqXHR, textStatus, errorThrown) {
					console.log(errorThrown);
					console.log(textStatus);
					console.log(jqXHR);
				}
			});
		});
	}


});
